{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "websearch-perplexity",
  "type": "registry:component",
  "title": "Web Search (Perplexity)",
  "author": "Nicklas Scharpff <https://n1cklas.com>",
  "description": "Web search via Perplexity Sonar using Vercel AI SDK (requires Perplexity API key). Shares renderer.",
  "dependencies": ["zod", "ai", "@ai-sdk/perplexity"],
  "registryDependencies": ["https://ai-tools-registry.vercel.app/r/card.json"],
  "files": [
    {
      "path": "registry/ai-tools/tools/websearch/websearch-perplexity-tool.ts",
      "content": "import { perplexity } from \"@ai-sdk/perplexity\"\nimport { tool, generateObject } from \"ai\"\nimport { z } from \"zod\"\n\nimport { WebSearchSchema, WebSearchResult } from \"./schema\"\n\nexport const webSearchPerplexityTool = tool({\n  name: \"websearch-perplexity\",\n  description:\n    \"Search the web using Perplexity Sonar via Vercel AI SDK. Requires Perplexity API key. See Vercel docs.\",\n  inputSchema: z.object({\n    query: z.string().min(1),\n    limit: z.number().min(1).max(20).default(5),\n  }),\n  outputSchema: WebSearchSchema,\n  execute: async ({ query, limit }) => {\n    // Use Sonar (or Sonar Pro) for search-grounded results\n\n    const { object } = await generateObject({\n      model: perplexity(\"sonar\"),\n      schema: WebSearchSchema,\n      system:\n        \"You are a search assistant. Return strictly the JSON schema provided. For each result include title, url, a short snippet, and a source hostname.\",\n      prompt: `Search the web for: ${query}. Return up to ${limit} high-quality, diverse results with proper URLs.`,\n    })\n\n    // Ensure limit is respected in case the model over-returns\n    const normalized: WebSearchResult = {\n      query,\n      results: (object.results || []).slice(0, limit).map((r) => {\n        let source = r.source\n        if (!source) {\n          try {\n            source = new URL(r.url).hostname\n          } catch {\n            source = undefined\n          }\n        }\n        return { title: r.title, url: r.url, snippet: r.snippet, source }\n      }),\n    }\n    return normalized\n  },\n})\n\nexport default webSearchPerplexityTool\n",
      "type": "registry:file",
      "target": "~/ai/tools/websearch/tool.ts"
    },
    {
      "path": "registry/ai-tools/tools/websearch/component.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport type { WebSearchItem, WebSearchResult } from \"./schema\"\nimport { ToolUIPart } from \"ai\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/ai-tools/ui/card\"\n\nexport function WebSearchList(part: ToolUIPart) {\n  const { query, results } = part.output as WebSearchResult\n  return (\n    <Card className=\"w-full max-w-xl\">\n      <CardHeader>\n        <CardTitle>Web Search</CardTitle>\n        <CardDescription>Query: {query}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ul className=\"space-y-3\">\n          {results.map((r: WebSearchItem) => (\n            <li key={r.url} className=\"rounded-md bg-muted p-3\">\n              <a\n                href={r.url}\n                className=\"font-medium hover:underline\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {r.title}\n              </a>\n              {r.source ? (\n                <span className=\"ml-2 text-xs text-muted-foreground\">\n                  ({r.source})\n                </span>\n              ) : null}\n              {r.snippet ? (\n                <div className=\"text-xs text-muted-foreground mt-1\">\n                  {r.snippet}\n                </div>\n              ) : null}\n            </li>\n          ))}\n        </ul>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default WebSearchList\n",
      "type": "registry:file",
      "target": "~/ai/tools/websearch/component.tsx"
    },
    {
      "path": "registry/ai-tools/tools/websearch/schema.ts",
      "content": "import { z } from \"zod\"\n\nexport const WebSearchItemSchema = z.object({\n  title: z.string(),\n  url: z.string().url(),\n  snippet: z.string().optional(),\n  source: z.string().optional(),\n})\n\nexport const WebSearchSchema = z.object({\n  query: z.string(),\n  results: z.array(WebSearchItemSchema),\n})\n\nexport type WebSearchItem = z.infer<typeof WebSearchItemSchema>\nexport type WebSearchResult = z.infer<typeof WebSearchSchema>\n",
      "type": "registry:file",
      "target": "~/ai/tools/websearch/schema.ts"
    },
    {
      "path": "registry/ai-tools/ui/card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\n        \"leading-none tracking-tight text-lg font-semibold\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
