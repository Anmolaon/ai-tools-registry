{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "weather",
  "type": "registry:component",
  "title": "Get Weather",
  "description": "AI SDK tool that returns mock weather for a location. Includes a WeatherCard renderer.",
  "dependencies": ["zod", "ai"],
  "registryDependencies": ["@ai-tools/card"],
  "files": [
    {
      "path": "registry/ai-tools/tools/weather/tool.ts",
      "content": "import { z } from \"zod\"\nimport type { Tool } from \"ai\"\n\n// Example tool definition compatible with AI SDK tool calling\nexport const getWeatherTool: Tool = {\n  name: \"getWeather\",\n  description: \"Get the current weather for a location.\",\n  inputSchema: z.object({\n    location: z.string().describe(\"City name, address or coordinates\"),\n    unit: z.enum([\"C\", \"F\"]).default(\"C\"),\n  }),\n  execute: async ({\n    location,\n    unit,\n  }: {\n    location: string\n    unit: \"C\" | \"F\"\n  }): Promise<GetWeatherResult> => {\n    throw new Error(\n      \"getWeather not implemented. Connect a weather API (e.g. OpenWeather) and return { location, unit, temperature, condition, high, low, humidity, windKph }.\"\n    )\n  },\n}\n\n// Re-export shape for result rendering components\nexport interface GetWeatherResult {\n  location: string\n  unit: \"C\" | \"F\"\n  temperature: number\n  condition: string\n  high: number\n  low: number\n  humidity: number // 0..1\n  windKph: number\n  icon?: string\n}\n\nexport default getWeatherTool\n",
      "type": "registry:file",
      "target": "~/ai/tools/weather/tool.ts"
    },
    {
      "path": "registry/ai-tools/tools/weather/component.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport type { GetWeatherResult } from \"./tool\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/ai-tools/ui/card\"\n\nexport function WeatherCard({ data }: { data: GetWeatherResult }) {\n  const {\n    location,\n    temperature,\n    unit,\n    condition,\n    high,\n    low,\n    humidity,\n    windKph,\n  } = data\n  return (\n    <Card className=\"w-full max-w-lg\">\n      <CardHeader>\n        <CardTitle>Weather</CardTitle>\n        <CardDescription>Powered by your tool</CardDescription>\n      </CardHeader>\n      <CardContent className=\"pb-6\">\n        <div className=\"text-lg font-semibold mb-1\">{location}</div>\n        <div className=\"flex items-baseline gap-3\">\n          <div className=\"text-5xl font-bold\">\n            {temperature}°{unit}\n          </div>\n          <div className=\"text-sm text-muted-foreground\">{condition}</div>\n        </div>\n        <div className=\"mt-4 grid grid-cols-3 gap-3 text-sm\">\n          <div className=\"rounded-md bg-muted p-3 text-center\">\n            <div className=\"text-muted-foreground\">High</div>\n            <div className=\"font-medium\">\n              {high}°{unit}\n            </div>\n          </div>\n          <div className=\"rounded-md bg-muted p-3 text-center\">\n            <div className=\"text-muted-foreground\">Low</div>\n            <div className=\"font-medium\">\n              {low}°{unit}\n            </div>\n          </div>\n          <div className=\"rounded-md bg-muted p-3 text-center\">\n            <div className=\"text-muted-foreground\">Humidity</div>\n            <div className=\"font-medium\">{Math.round(humidity * 100)}%</div>\n          </div>\n        </div>\n        <div className=\"mt-3 text-sm text-muted-foreground\">\n          Wind: {windKph} kph\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default WeatherCard\n",
      "type": "registry:file",
      "target": "~/ai/tools/weather/component.tsx"
    },
    {
      "path": "registry/ai-tools/ui/card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\n        \"leading-none tracking-tight text-lg font-semibold\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
