{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "websearch",
  "type": "registry:component",
  "title": "Web Search",
  "description": "AI SDK tool that searches the web. Includes a results renderer.",
  "dependencies": ["zod", "ai"],
  "registryDependencies": ["@ai-tools/card"],
  "files": [
    {
      "path": "registry/ai-tools/tools/websearch/tool.ts",
      "content": "import { z } from \"zod\"\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { Tool } from \"ai\"\n\nexport interface WebSearchItem {\n  title: string\n  url: string\n  snippet?: string\n  source?: string\n}\n\nexport interface WebSearchResult {\n  query: string\n  results: WebSearchItem[]\n}\n\nexport const webSearchTool: /* Tool */ any = {\n  name: \"webSearch\",\n  description: \"Search the web and return relevant results.\",\n  inputSchema: z.object({\n    query: z.string().min(1),\n    limit: z.number().min(1).max(20).default(5),\n    lang: z.string().optional(),\n    country: z.string().optional(),\n  }),\n  execute: async ({\n    query,\n    limit,\n  }: {\n    query: string\n    limit: number\n  }): Promise<WebSearchResult> => {\n    throw new Error(\n      \"webSearch not implemented. Connect a web search provider (e.g. Tavily, Brave, Bing) and return { query, results: [{ title, url, snippet?, source? }] }.\"\n    )\n  },\n}\n\nexport default webSearchTool\n",
      "type": "registry:file",
      "target": "~/ai/tools/websearch/tool.ts"
    },
    {
      "path": "registry/ai-tools/tools/websearch/component.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport type { WebSearchResult } from \"./tool\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/ai-tools/ui/card\"\n\nexport function WebSearchList({ data }: { data: WebSearchResult }) {\n  return (\n    <Card className=\"w-full max-w-xl\">\n      <CardHeader>\n        <CardTitle>Web Search</CardTitle>\n        <CardDescription>Query: {data.query}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ul className=\"space-y-3\">\n          {data.results.map((r) => (\n            <li key={r.url} className=\"rounded-md bg-muted p-3\">\n              <a\n                href={r.url}\n                className=\"font-medium hover:underline\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {r.title}\n              </a>\n              {r.source ? (\n                <span className=\"ml-2 text-xs text-muted-foreground\">\n                  ({r.source})\n                </span>\n              ) : null}\n              {r.snippet ? (\n                <div className=\"text-xs text-muted-foreground mt-1\">\n                  {r.snippet}\n                </div>\n              ) : null}\n            </li>\n          ))}\n        </ul>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default WebSearchList\n",
      "type": "registry:file",
      "target": "~/ai/tools/websearch/component.tsx"
    },
    {
      "path": "registry/ai-tools/ui/card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\n        \"leading-none tracking-tight text-lg font-semibold\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
